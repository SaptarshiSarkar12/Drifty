name: Lint Code Base

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Lint Code Base
    #if: github.repository == 'SaptarshiSarkar12/Drifty'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          # Full git history is necessary to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
          cache: "npm"
          cache-dependency-path: "./Website/package-lock.json"
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/Website/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/Website/package-lock.json') }}-
      - name: Run the linter on website code
        run: |
          cd Website
          npm ci
          npm run lint
      - name: Lint Code Base
        id: lint
        uses: super-linter/super-linter/slim@v8
        continue-on-error: true
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CREATE_LOG_FILE: true
          VALIDATE_BASH: false
          VALIDATE_CPP: false
          VALIDATE_CSS: false
          VALIDATE_GITHUB_ACTIONS: false
          VALIDATE_GOOGLE_JAVA_FORMAT: false
          VALIDATE_JAVASCRIPT_STANDARD: false
          VALIDATE_JSX: false
          VALIDATE_JAVASCRIPT_ES: false
          VALIDATE_JAVASCRIPT_PRETTIER: false
          VALIDATE_TSX: false
          VALIDATE_TYPESCRIPT_ES: false
          VALIDATE_TYPESCRIPT_STANDARD: false
          VALIDATE_JSON: false
          VALIDATE_CLANG_FORMAT: false
          VALIDATE_CSHARP: false
          VALIDATE_NATURAL_LANGUAGE: false
          VALIDATE_YAML: false
          VALIDATE_CHECKOV: false
          VALIDATE_SHELL_SHFMT: false
          VALIDATE_GIT_MERGE_CONFLICT_MARKERS: false
          VALIDATE_GITHUB_ACTIONS_ZIZMOR: false
          VALIDATE_TRIVY: false
          VALIDATE_BIOME_FORMAT: false
          VALIDATE_BIOME_LINT: false
      - name: Set read and write permission in super linter log
        run: sudo chmod 777 super-linter.log
      - name: Upload Lint Result
        id: upload-lint-result
        uses: actions/upload-artifact@v4
        with:
          name: linter-result
          path: super-linter.log
      - name: Generate Workflow Summary
        run: |
            echo "## Linting Summary" >> $GITHUB_STEP_SUMMARY
            if [[ "${{ steps.lint.outcome }}" == "success" ]]; then
              echo ":heavy_check_mark: Linting passed successfully!" >> $GITHUB_STEP_SUMMARY
            else
              echo ":warning: Linting failed. Please download the [linter log artifact](${{steps.upload-lint-result.outputs.artifact_url}}) for details." >> $GITHUB_STEP_SUMMARY
            fi
      - name: Fail Workflow for failure in linting
        if: ${{ steps.lint.outcome == 'failure' }}
        uses: actions/github-script@v8.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            core.setFailed("Linting errors found! Please check workflow summary for details.")
